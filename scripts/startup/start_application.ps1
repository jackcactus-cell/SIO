# Script de d√©marrage de l'application SIO avec syst√®me de logging
# PowerShell Script pour Windows

Write-Host "üöÄ D√©marrage de l'application SIO avec syst√®me de logging complet" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Cyan

# V√©rifier que Node.js est install√©
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js d√©tect√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n'est pas install√© ou n'est pas dans le PATH" -ForegroundColor Red
    exit 1
}

# V√©rifier que le dossier logs existe
$logsDir = ".\logs"
if (-not (Test-Path $logsDir)) {
    Write-Host "üìÅ Cr√©ation du dossier logs..." -ForegroundColor Yellow
    New-Item -ItemType Directory -Path $logsDir -Force | Out-Null
}

# Nettoyer les logs anciens
Write-Host "üßπ Nettoyage des logs anciens..." -ForegroundColor Yellow
node cleanup_logs.js

# Tester le syst√®me de logging
Write-Host "üß™ Test du syst√®me de logging..." -ForegroundColor Yellow
node test_logging_complete.js

# D√©marrer le backend
Write-Host "üîß D√©marrage du backend..." -ForegroundColor Yellow
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd backend; node index.js" -WindowStyle Normal

# Attendre un peu pour que le backend d√©marre
Start-Sleep -Seconds 3

# D√©marrer le frontend
Write-Host "üé® D√©marrage du frontend..." -ForegroundColor Yellow
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd project; npm run dev" -WindowStyle Normal

# D√©marrer MongoDB si n√©cessaire
Write-Host "üóÑÔ∏è V√©rification de MongoDB..." -ForegroundColor Yellow
try {
    $mongoStatus = Get-Service -Name "MongoDB" -ErrorAction SilentlyContinue
    if ($mongoStatus -and $mongoStatus.Status -eq "Running") {
        Write-Host "‚úÖ MongoDB est d√©j√† en cours d'ex√©cution" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è MongoDB n'est pas en cours d'ex√©cution" -ForegroundColor Yellow
        Write-Host "   Vous pouvez le d√©marrer manuellement ou utiliser: .\start_mongodb.ps1" -ForegroundColor Cyan
    }
} catch {
    Write-Host "‚ö†Ô∏è Impossible de v√©rifier le statut de MongoDB" -ForegroundColor Yellow
}

Write-Host "=" * 60 -ForegroundColor Cyan
Write-Host "‚úÖ Application SIO d√©marr√©e avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Services d√©marr√©s:" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend Node.js (port 4000)" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend React (port 5173)" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Syst√®me de logging complet" -ForegroundColor Cyan
Write-Host ""
Write-Host "üîç Surveillance des logs:" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend: tail -f logs/backend.log" -ForegroundColor Gray
Write-Host "   ‚Ä¢ API: tail -f logs/api.log" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Chatbot: tail -f logs/chatbot.log" -ForegroundColor Gray
Write-Host ""
Write-Host "üåê Acc√®s √† l'application:" -ForegroundColor White
Write-Host "   ‚Ä¢ Interface: http://localhost:5173" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ API: http://localhost:4000" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìä Rapport de logs: logs/log_report.json" -ForegroundColor Gray
Write-Host ""
Write-Host "Appuyez sur une touche pour fermer cette fen√™tre..." -ForegroundColor Yellow
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
